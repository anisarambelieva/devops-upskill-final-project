name: PR pipeline

on:
  pull_request:
    types: [opened, reopened]
    paths: ['**.py', 'Dockerfile']

jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install black flake8

      - name: Run linters
        uses: wearerequired/lint-action@v2
        with:
          black: true
          flake8: true

  run-tests:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.13

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt

      - name: Test with pytest
        run: pytest app_test.py

  scan-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Run gitleaks
        uses: gitleaks/gitleaks-action@v2

  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.organization=anisarambelieva
          -Dsonar.projectKey=anisarambelieva_devops-upskill-final-project
  
  # Upgrade snyk plan to run scan 
  # snyk:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out Git repository
  #       uses: actions/checkout@v3

  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/python-3.10@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --severity-threshold=critical

  docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          tags: '${{ secrets.DOCKERHUB_USERNAME }}/newsletter-app:${{ github.sha }}'
          load: true
      
      - name: Run Trivy vulnerability scanner
        id: trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/newsletter-app:${{ github.sha }}'
          severity: 'CRITICAL,HIGH'
